@using EmployeeManager.Services
@using System.Collections
@using EmployeeManager.Models
@inject AppState AppState
@inject DepartmentService DepartmentService

<MudDialog>
    <DialogContent>
        <MudStack>

            <MudNumericField @bind-Value="AppState.ItemsPerPage" Label="Items per page" Min="0" Max="100"/>

            @* Gender *@
            <MudSwitch @bind-Checked="AppState.GenderFilter.IsActive"
                       Label="Filter gender" Color="Color.Primary"/>
            @if (AppState.GenderFilter.IsActive)
            {
                <MudRadioGroup @bind-SelectedOption="AppState.GenderFilter.AllowedValue">
                    <MudRadio Option="@("M")" Color="Color.Tertiary">Male</MudRadio>
                    <MudRadio Option="@("F")" Color="Color.Secondary">Female</MudRadio>
                </MudRadioGroup>
            }

            @* Department *@
            <MudSwitch @bind-Checked="AppState.DepartmentFilter.IsActive"
                       Label="Filter department" Color="Color.Primary"/>
            @if (AppState.DepartmentFilter.IsActive)
            {
                <MudSelect @bind-Value="AppState.DepartmentFilter.AllowedValue">
                    @foreach(var department in _departments)
                    {
                        <MudSelectItem Value="@department.DeptNo">@department.DeptName</MudSelectItem>
                    }
                </MudSelect>
            }

            @* Salary *@
            <MudSwitch @bind-Checked="AppState.SalaryFilter.IsActive"
                       Label="Filter salary" Color="Color.Primary"/>
            @if (AppState.SalaryFilter.IsActive)
            {
                <MudNumericField @bind-Value="AppState.SalaryFilter.AllowedValue.From"
                                 Label="From" Min="0" Max="200000"/>
                <MudNumericField @bind-Value="AppState.SalaryFilter.AllowedValue.To"
                                 Label="To" Min="0" Max="200000"/>
            }

            @* Current/former employee *@
            <MudSwitch @bind-Checked="AppState.CurrentEmployeeFilter.IsActive"
                       Label="Filter current/former employee" Color="Color.Primary"/>
            @if (AppState.CurrentEmployeeFilter.IsActive)
            {
                <MudRadioGroup @bind-SelectedOption="AppState.CurrentEmployeeFilter.AllowedValue">
                    <MudRadio Option="@true" Color="Color.Success">Current</MudRadio>
                    <MudRadio Option="@false" Color="Color.Error">Former</MudRadio>
                </MudRadioGroup>
            }
            
        </MudStack>
    </DialogContent>
    <DialogActions>

        <MudButton OnClick="@AppState.ResetToDefaults">Default</MudButton>
        <MudButton OnClick="Save" Variant="Variant.Filled" Color="Color.Success">Save</MudButton>

    </DialogActions>
</MudDialog>

@code
{
    [CascadingParameter]
    [EditorRequired]
    MudDialogInstance MudDialog { get; set; } = null!;

    void Save()
    {
        MudDialog.Close(DialogResult.Ok(true));
        AppState.LastEmployeeId = null; // go to first page
        AppState.NotifyFiltersChanged();
    }

    IEnumerable<Department> _departments = null!;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        _departments = DepartmentService.GetDepartments();
    }
}